{"ast":null,"code":"var _jsxFileName = \"/Users/chuongdan/Documents/code-quest/src/store/timers-context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimersContext = /*#__PURE__*/createContext(null);\nexport function useTimersContext() {\n  _s();\n  const timersCtx = useContext(TimersContext);\n  if (timersCtx === null) {\n    throw new Error(\"TimersContext is null - that should not be the case !\");\n  }\n  return timersCtx;\n}\n_s(useTimersContext, \"g7Pi4sBSTFUhQWX+7FRuxaci678=\");\nexport default function TimersContextProvider({\n  children\n}) {\n  const ctx = {\n    timers: [],\n    isRunning: false,\n    addTimer(timerData) {},\n    startTimers() {},\n    stopTimers() {}\n  };\n  return /*#__PURE__*/_jsxDEV(TimersContext.Provider, {\n    value: ctx,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = TimersContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TimersContextProvider\");","map":{"version":3,"names":["createContext","useContext","jsxDEV","_jsxDEV","TimersContext","useTimersContext","_s","timersCtx","Error","TimersContextProvider","children","ctx","timers","isRunning","addTimer","timerData","startTimers","stopTimers","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chuongdan/Documents/code-quest/src/store/timers-context.tsx"],"sourcesContent":["import { createContext, useContext, type ReactNode } from \"react\";\n\ntype Timer = {\n  name: string;\n  duration: number;\n};\n\ntype TimersState = {\n  isRunning: boolean;\n  timers: Timer[];\n};\n\ntype TimersContextValue = TimersState & {\n  addTimer: (timerData: Timer) => void;\n  startTimers: () => void;\n  stopTimers: () => void;\n};\n\nconst TimersContext = createContext<TimersContextValue | null>(null);\n\nexport function useTimersContext() {\n  const timersCtx = useContext(TimersContext);\n\n  if (timersCtx === null) {\n    throw new Error(\"TimersContext is null - that should not be the case !\");\n  }\n\n  return timersCtx;\n}\n\ntype TimersContextProviderProps = {\n  children: ReactNode;\n};\n\nexport default function TimersContextProvider({\n  children,\n}: TimersContextProviderProps) {\n  const ctx: TimersContextValue = {\n    timers: [],\n    isRunning: false,\n    addTimer(timerData) {},\n    startTimers() {},\n    stopTimers() {},\n  };\n\n  return (\n    <TimersContext.Provider value={ctx}>{children}</TimersContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAwB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBlE,MAAMC,aAAa,gBAAGJ,aAAa,CAA4B,IAAI,CAAC;AAEpE,OAAO,SAASK,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,SAAS,GAAGN,UAAU,CAACG,aAAa,CAAC;EAE3C,IAAIG,SAAS,KAAK,IAAI,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,uDAAuD,CAAC;EAC1E;EAEA,OAAOD,SAAS;AAClB;AAACD,EAAA,CAReD,gBAAgB;AAchC,eAAe,SAASI,qBAAqBA,CAAC;EAC5CC;AAC0B,CAAC,EAAE;EAC7B,MAAMC,GAAuB,GAAG;IAC9BC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,KAAK;IAChBC,QAAQA,CAACC,SAAS,EAAE,CAAC,CAAC;IACtBC,WAAWA,CAAA,EAAG,CAAC,CAAC;IAChBC,UAAUA,CAAA,EAAG,CAAC;EAChB,CAAC;EAED,oBACEd,OAAA,CAACC,aAAa,CAACc,QAAQ;IAACC,KAAK,EAAER,GAAI;IAAAD,QAAA,EAAEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAyB,CAAC;AAE3E;AAACC,EAAA,GAduBf,qBAAqB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}